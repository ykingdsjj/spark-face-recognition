// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.opencv.proto

package com.gitee.code4fun.facerecognition.common.rpc.stub;

public final class OpenCVServiceProto {
  private OpenCVServiceProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface OpenCVBasicRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:service.OpenCVBasicRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string imageCode = 1;</code>
     */
    String getImageCode();
    /**
     * <code>string imageCode = 1;</code>
     */
    com.google.protobuf.ByteString
        getImageCodeBytes();
  }
  /**
   * Protobuf type {@code service.OpenCVBasicRequest}
   */
  public  static final class OpenCVBasicRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:service.OpenCVBasicRequest)
      OpenCVBasicRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OpenCVBasicRequest.newBuilder() to construct.
    private OpenCVBasicRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OpenCVBasicRequest() {
      imageCode_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OpenCVBasicRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              imageCode_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OpenCVServiceProto.internal_static_service_OpenCVBasicRequest_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OpenCVServiceProto.internal_static_service_OpenCVBasicRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OpenCVBasicRequest.class, Builder.class);
    }

    public static final int IMAGECODE_FIELD_NUMBER = 1;
    private volatile Object imageCode_;
    /**
     * <code>string imageCode = 1;</code>
     */
    public String getImageCode() {
      Object ref = imageCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        imageCode_ = s;
        return s;
      }
    }
    /**
     * <code>string imageCode = 1;</code>
     */
    public com.google.protobuf.ByteString
        getImageCodeBytes() {
      Object ref = imageCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        imageCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getImageCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, imageCode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getImageCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, imageCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof OpenCVBasicRequest)) {
        return super.equals(obj);
      }
      OpenCVBasicRequest other = (OpenCVBasicRequest) obj;

      boolean result = true;
      result = result && getImageCode()
          .equals(other.getImageCode());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IMAGECODE_FIELD_NUMBER;
      hash = (53 * hash) + getImageCode().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static OpenCVBasicRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenCVBasicRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenCVBasicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenCVBasicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenCVBasicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenCVBasicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenCVBasicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OpenCVBasicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static OpenCVBasicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static OpenCVBasicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static OpenCVBasicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OpenCVBasicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(OpenCVBasicRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code service.OpenCVBasicRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:service.OpenCVBasicRequest)
        OpenCVBasicRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OpenCVServiceProto.internal_static_service_OpenCVBasicRequest_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OpenCVServiceProto.internal_static_service_OpenCVBasicRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OpenCVBasicRequest.class, Builder.class);
      }

      // Construct using com.gitee.code4fun.facerecognition.common.rpc.stub.OpenCVServiceProto.OpenCVBasicRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        imageCode_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OpenCVServiceProto.internal_static_service_OpenCVBasicRequest_descriptor;
      }

      public OpenCVBasicRequest getDefaultInstanceForType() {
        return OpenCVBasicRequest.getDefaultInstance();
      }

      public OpenCVBasicRequest build() {
        OpenCVBasicRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public OpenCVBasicRequest buildPartial() {
        OpenCVBasicRequest result = new OpenCVBasicRequest(this);
        result.imageCode_ = imageCode_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OpenCVBasicRequest) {
          return mergeFrom((OpenCVBasicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OpenCVBasicRequest other) {
        if (other == OpenCVBasicRequest.getDefaultInstance()) return this;
        if (!other.getImageCode().isEmpty()) {
          imageCode_ = other.imageCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OpenCVBasicRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OpenCVBasicRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object imageCode_ = "";
      /**
       * <code>string imageCode = 1;</code>
       */
      public String getImageCode() {
        Object ref = imageCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          imageCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string imageCode = 1;</code>
       */
      public com.google.protobuf.ByteString
          getImageCodeBytes() {
        Object ref = imageCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          imageCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string imageCode = 1;</code>
       */
      public Builder setImageCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        imageCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string imageCode = 1;</code>
       */
      public Builder clearImageCode() {
        
        imageCode_ = getDefaultInstance().getImageCode();
        onChanged();
        return this;
      }
      /**
       * <code>string imageCode = 1;</code>
       */
      public Builder setImageCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        imageCode_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:service.OpenCVBasicRequest)
    }

    // @@protoc_insertion_point(class_scope:service.OpenCVBasicRequest)
    private static final OpenCVBasicRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OpenCVBasicRequest();
    }

    public static OpenCVBasicRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OpenCVBasicRequest>
        PARSER = new com.google.protobuf.AbstractParser<OpenCVBasicRequest>() {
      public OpenCVBasicRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenCVBasicRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OpenCVBasicRequest> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<OpenCVBasicRequest> getParserForType() {
      return PARSER;
    }

    public OpenCVBasicRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface OpenCVBasicResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:service.OpenCVBasicResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string code = 1;</code>
     */
    String getCode();
    /**
     * <code>string code = 1;</code>
     */
    com.google.protobuf.ByteString
        getCodeBytes();

    /**
     * <code>string desc = 2;</code>
     */
    String getDesc();
    /**
     * <code>string desc = 2;</code>
     */
    com.google.protobuf.ByteString
        getDescBytes();
  }
  /**
   * Protobuf type {@code service.OpenCVBasicResponse}
   */
  public  static final class OpenCVBasicResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:service.OpenCVBasicResponse)
      OpenCVBasicResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use OpenCVBasicResponse.newBuilder() to construct.
    private OpenCVBasicResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OpenCVBasicResponse() {
      code_ = "";
      desc_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private OpenCVBasicResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              String s = input.readStringRequireUtf8();

              code_ = s;
              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              desc_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OpenCVServiceProto.internal_static_service_OpenCVBasicResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OpenCVServiceProto.internal_static_service_OpenCVBasicResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              OpenCVBasicResponse.class, Builder.class);
    }

    public static final int CODE_FIELD_NUMBER = 1;
    private volatile Object code_;
    /**
     * <code>string code = 1;</code>
     */
    public String getCode() {
      Object ref = code_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        code_ = s;
        return s;
      }
    }
    /**
     * <code>string code = 1;</code>
     */
    public com.google.protobuf.ByteString
        getCodeBytes() {
      Object ref = code_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        code_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DESC_FIELD_NUMBER = 2;
    private volatile Object desc_;
    /**
     * <code>string desc = 2;</code>
     */
    public String getDesc() {
      Object ref = desc_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        desc_ = s;
        return s;
      }
    }
    /**
     * <code>string desc = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDescBytes() {
      Object ref = desc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        desc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, code_);
      }
      if (!getDescBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, desc_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, code_);
      }
      if (!getDescBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, desc_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof OpenCVBasicResponse)) {
        return super.equals(obj);
      }
      OpenCVBasicResponse other = (OpenCVBasicResponse) obj;

      boolean result = true;
      result = result && getCode()
          .equals(other.getCode());
      result = result && getDesc()
          .equals(other.getDesc());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CODE_FIELD_NUMBER;
      hash = (53 * hash) + getCode().hashCode();
      hash = (37 * hash) + DESC_FIELD_NUMBER;
      hash = (53 * hash) + getDesc().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static OpenCVBasicResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenCVBasicResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenCVBasicResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenCVBasicResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenCVBasicResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static OpenCVBasicResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static OpenCVBasicResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OpenCVBasicResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static OpenCVBasicResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static OpenCVBasicResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static OpenCVBasicResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static OpenCVBasicResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(OpenCVBasicResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code service.OpenCVBasicResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:service.OpenCVBasicResponse)
        OpenCVBasicResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OpenCVServiceProto.internal_static_service_OpenCVBasicResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OpenCVServiceProto.internal_static_service_OpenCVBasicResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                OpenCVBasicResponse.class, Builder.class);
      }

      // Construct using com.gitee.code4fun.facerecognition.common.rpc.stub.OpenCVServiceProto.OpenCVBasicResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        code_ = "";

        desc_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OpenCVServiceProto.internal_static_service_OpenCVBasicResponse_descriptor;
      }

      public OpenCVBasicResponse getDefaultInstanceForType() {
        return OpenCVBasicResponse.getDefaultInstance();
      }

      public OpenCVBasicResponse build() {
        OpenCVBasicResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public OpenCVBasicResponse buildPartial() {
        OpenCVBasicResponse result = new OpenCVBasicResponse(this);
        result.code_ = code_;
        result.desc_ = desc_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof OpenCVBasicResponse) {
          return mergeFrom((OpenCVBasicResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(OpenCVBasicResponse other) {
        if (other == OpenCVBasicResponse.getDefaultInstance()) return this;
        if (!other.getCode().isEmpty()) {
          code_ = other.code_;
          onChanged();
        }
        if (!other.getDesc().isEmpty()) {
          desc_ = other.desc_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        OpenCVBasicResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (OpenCVBasicResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object code_ = "";
      /**
       * <code>string code = 1;</code>
       */
      public String getCode() {
        Object ref = code_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          code_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string code = 1;</code>
       */
      public com.google.protobuf.ByteString
          getCodeBytes() {
        Object ref = code_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          code_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string code = 1;</code>
       */
      public Builder setCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        code_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string code = 1;</code>
       */
      public Builder clearCode() {
        
        code_ = getDefaultInstance().getCode();
        onChanged();
        return this;
      }
      /**
       * <code>string code = 1;</code>
       */
      public Builder setCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        code_ = value;
        onChanged();
        return this;
      }

      private Object desc_ = "";
      /**
       * <code>string desc = 2;</code>
       */
      public String getDesc() {
        Object ref = desc_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          desc_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string desc = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDescBytes() {
        Object ref = desc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          desc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string desc = 2;</code>
       */
      public Builder setDesc(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        desc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string desc = 2;</code>
       */
      public Builder clearDesc() {
        
        desc_ = getDefaultInstance().getDesc();
        onChanged();
        return this;
      }
      /**
       * <code>string desc = 2;</code>
       */
      public Builder setDescBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        desc_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:service.OpenCVBasicResponse)
    }

    // @@protoc_insertion_point(class_scope:service.OpenCVBasicResponse)
    private static final OpenCVBasicResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new OpenCVBasicResponse();
    }

    public static OpenCVBasicResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OpenCVBasicResponse>
        PARSER = new com.google.protobuf.AbstractParser<OpenCVBasicResponse>() {
      public OpenCVBasicResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new OpenCVBasicResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OpenCVBasicResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<OpenCVBasicResponse> getParserForType() {
      return PARSER;
    }

    public OpenCVBasicResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ImageResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:service.ImageResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    boolean hasBasicResponse();
    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    OpenCVBasicResponse getBasicResponse();
    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    OpenCVBasicResponseOrBuilder getBasicResponseOrBuilder();

    /**
     * <code>string imageCode = 2;</code>
     */
    String getImageCode();
    /**
     * <code>string imageCode = 2;</code>
     */
    com.google.protobuf.ByteString
        getImageCodeBytes();
  }
  /**
   * Protobuf type {@code service.ImageResponse}
   */
  public  static final class ImageResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:service.ImageResponse)
      ImageResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ImageResponse.newBuilder() to construct.
    private ImageResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ImageResponse() {
      imageCode_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ImageResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              OpenCVBasicResponse.Builder subBuilder = null;
              if (basicResponse_ != null) {
                subBuilder = basicResponse_.toBuilder();
              }
              basicResponse_ = input.readMessage(OpenCVBasicResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basicResponse_);
                basicResponse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              imageCode_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OpenCVServiceProto.internal_static_service_ImageResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OpenCVServiceProto.internal_static_service_ImageResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ImageResponse.class, Builder.class);
    }

    public static final int BASICRESPONSE_FIELD_NUMBER = 1;
    private OpenCVBasicResponse basicResponse_;
    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    public boolean hasBasicResponse() {
      return basicResponse_ != null;
    }
    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    public OpenCVBasicResponse getBasicResponse() {
      return basicResponse_ == null ? OpenCVBasicResponse.getDefaultInstance() : basicResponse_;
    }
    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    public OpenCVBasicResponseOrBuilder getBasicResponseOrBuilder() {
      return getBasicResponse();
    }

    public static final int IMAGECODE_FIELD_NUMBER = 2;
    private volatile Object imageCode_;
    /**
     * <code>string imageCode = 2;</code>
     */
    public String getImageCode() {
      Object ref = imageCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        imageCode_ = s;
        return s;
      }
    }
    /**
     * <code>string imageCode = 2;</code>
     */
    public com.google.protobuf.ByteString
        getImageCodeBytes() {
      Object ref = imageCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        imageCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (basicResponse_ != null) {
        output.writeMessage(1, getBasicResponse());
      }
      if (!getImageCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, imageCode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (basicResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBasicResponse());
      }
      if (!getImageCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, imageCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ImageResponse)) {
        return super.equals(obj);
      }
      ImageResponse other = (ImageResponse) obj;

      boolean result = true;
      result = result && (hasBasicResponse() == other.hasBasicResponse());
      if (hasBasicResponse()) {
        result = result && getBasicResponse()
            .equals(other.getBasicResponse());
      }
      result = result && getImageCode()
          .equals(other.getImageCode());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBasicResponse()) {
        hash = (37 * hash) + BASICRESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getBasicResponse().hashCode();
      }
      hash = (37 * hash) + IMAGECODE_FIELD_NUMBER;
      hash = (53 * hash) + getImageCode().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ImageResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ImageResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ImageResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ImageResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ImageResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ImageResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ImageResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ImageResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ImageResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ImageResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ImageResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ImageResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ImageResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code service.ImageResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:service.ImageResponse)
        ImageResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OpenCVServiceProto.internal_static_service_ImageResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OpenCVServiceProto.internal_static_service_ImageResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ImageResponse.class, Builder.class);
      }

      // Construct using com.gitee.code4fun.facerecognition.common.rpc.stub.OpenCVServiceProto.ImageResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (basicResponseBuilder_ == null) {
          basicResponse_ = null;
        } else {
          basicResponse_ = null;
          basicResponseBuilder_ = null;
        }
        imageCode_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OpenCVServiceProto.internal_static_service_ImageResponse_descriptor;
      }

      public ImageResponse getDefaultInstanceForType() {
        return ImageResponse.getDefaultInstance();
      }

      public ImageResponse build() {
        ImageResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public ImageResponse buildPartial() {
        ImageResponse result = new ImageResponse(this);
        if (basicResponseBuilder_ == null) {
          result.basicResponse_ = basicResponse_;
        } else {
          result.basicResponse_ = basicResponseBuilder_.build();
        }
        result.imageCode_ = imageCode_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ImageResponse) {
          return mergeFrom((ImageResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ImageResponse other) {
        if (other == ImageResponse.getDefaultInstance()) return this;
        if (other.hasBasicResponse()) {
          mergeBasicResponse(other.getBasicResponse());
        }
        if (!other.getImageCode().isEmpty()) {
          imageCode_ = other.imageCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ImageResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ImageResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private OpenCVBasicResponse basicResponse_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          OpenCVBasicResponse, OpenCVBasicResponse.Builder, OpenCVBasicResponseOrBuilder> basicResponseBuilder_;
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public boolean hasBasicResponse() {
        return basicResponseBuilder_ != null || basicResponse_ != null;
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public OpenCVBasicResponse getBasicResponse() {
        if (basicResponseBuilder_ == null) {
          return basicResponse_ == null ? OpenCVBasicResponse.getDefaultInstance() : basicResponse_;
        } else {
          return basicResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public Builder setBasicResponse(OpenCVBasicResponse value) {
        if (basicResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basicResponse_ = value;
          onChanged();
        } else {
          basicResponseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public Builder setBasicResponse(
          OpenCVBasicResponse.Builder builderForValue) {
        if (basicResponseBuilder_ == null) {
          basicResponse_ = builderForValue.build();
          onChanged();
        } else {
          basicResponseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public Builder mergeBasicResponse(OpenCVBasicResponse value) {
        if (basicResponseBuilder_ == null) {
          if (basicResponse_ != null) {
            basicResponse_ =
              OpenCVBasicResponse.newBuilder(basicResponse_).mergeFrom(value).buildPartial();
          } else {
            basicResponse_ = value;
          }
          onChanged();
        } else {
          basicResponseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public Builder clearBasicResponse() {
        if (basicResponseBuilder_ == null) {
          basicResponse_ = null;
          onChanged();
        } else {
          basicResponse_ = null;
          basicResponseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public OpenCVBasicResponse.Builder getBasicResponseBuilder() {
        
        onChanged();
        return getBasicResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public OpenCVBasicResponseOrBuilder getBasicResponseOrBuilder() {
        if (basicResponseBuilder_ != null) {
          return basicResponseBuilder_.getMessageOrBuilder();
        } else {
          return basicResponse_ == null ?
              OpenCVBasicResponse.getDefaultInstance() : basicResponse_;
        }
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          OpenCVBasicResponse, OpenCVBasicResponse.Builder, OpenCVBasicResponseOrBuilder>
          getBasicResponseFieldBuilder() {
        if (basicResponseBuilder_ == null) {
          basicResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              OpenCVBasicResponse, OpenCVBasicResponse.Builder, OpenCVBasicResponseOrBuilder>(
                  getBasicResponse(),
                  getParentForChildren(),
                  isClean());
          basicResponse_ = null;
        }
        return basicResponseBuilder_;
      }

      private Object imageCode_ = "";
      /**
       * <code>string imageCode = 2;</code>
       */
      public String getImageCode() {
        Object ref = imageCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          imageCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string imageCode = 2;</code>
       */
      public com.google.protobuf.ByteString
          getImageCodeBytes() {
        Object ref = imageCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          imageCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string imageCode = 2;</code>
       */
      public Builder setImageCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        imageCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string imageCode = 2;</code>
       */
      public Builder clearImageCode() {
        
        imageCode_ = getDefaultInstance().getImageCode();
        onChanged();
        return this;
      }
      /**
       * <code>string imageCode = 2;</code>
       */
      public Builder setImageCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        imageCode_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:service.ImageResponse)
    }

    // @@protoc_insertion_point(class_scope:service.ImageResponse)
    private static final ImageResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ImageResponse();
    }

    public static ImageResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ImageResponse>
        PARSER = new com.google.protobuf.AbstractParser<ImageResponse>() {
      public ImageResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ImageResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ImageResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<ImageResponse> getParserForType() {
      return PARSER;
    }

    public ImageResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VectorResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:service.VectorResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    boolean hasBasicResponse();
    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    OpenCVBasicResponse getBasicResponse();
    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    OpenCVBasicResponseOrBuilder getBasicResponseOrBuilder();

    /**
     * <code>string vectorCode = 2;</code>
     */
    String getVectorCode();
    /**
     * <code>string vectorCode = 2;</code>
     */
    com.google.protobuf.ByteString
        getVectorCodeBytes();
  }
  /**
   * Protobuf type {@code service.VectorResponse}
   */
  public  static final class VectorResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:service.VectorResponse)
      VectorResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use VectorResponse.newBuilder() to construct.
    private VectorResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private VectorResponse() {
      vectorCode_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private VectorResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              OpenCVBasicResponse.Builder subBuilder = null;
              if (basicResponse_ != null) {
                subBuilder = basicResponse_.toBuilder();
              }
              basicResponse_ = input.readMessage(OpenCVBasicResponse.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basicResponse_);
                basicResponse_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              String s = input.readStringRequireUtf8();

              vectorCode_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return OpenCVServiceProto.internal_static_service_VectorResponse_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return OpenCVServiceProto.internal_static_service_VectorResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VectorResponse.class, Builder.class);
    }

    public static final int BASICRESPONSE_FIELD_NUMBER = 1;
    private OpenCVBasicResponse basicResponse_;
    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    public boolean hasBasicResponse() {
      return basicResponse_ != null;
    }
    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    public OpenCVBasicResponse getBasicResponse() {
      return basicResponse_ == null ? OpenCVBasicResponse.getDefaultInstance() : basicResponse_;
    }
    /**
     * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
     */
    public OpenCVBasicResponseOrBuilder getBasicResponseOrBuilder() {
      return getBasicResponse();
    }

    public static final int VECTORCODE_FIELD_NUMBER = 2;
    private volatile Object vectorCode_;
    /**
     * <code>string vectorCode = 2;</code>
     */
    public String getVectorCode() {
      Object ref = vectorCode_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        vectorCode_ = s;
        return s;
      }
    }
    /**
     * <code>string vectorCode = 2;</code>
     */
    public com.google.protobuf.ByteString
        getVectorCodeBytes() {
      Object ref = vectorCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        vectorCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (basicResponse_ != null) {
        output.writeMessage(1, getBasicResponse());
      }
      if (!getVectorCodeBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, vectorCode_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (basicResponse_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBasicResponse());
      }
      if (!getVectorCodeBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, vectorCode_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof VectorResponse)) {
        return super.equals(obj);
      }
      VectorResponse other = (VectorResponse) obj;

      boolean result = true;
      result = result && (hasBasicResponse() == other.hasBasicResponse());
      if (hasBasicResponse()) {
        result = result && getBasicResponse()
            .equals(other.getBasicResponse());
      }
      result = result && getVectorCode()
          .equals(other.getVectorCode());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBasicResponse()) {
        hash = (37 * hash) + BASICRESPONSE_FIELD_NUMBER;
        hash = (53 * hash) + getBasicResponse().hashCode();
      }
      hash = (37 * hash) + VECTORCODE_FIELD_NUMBER;
      hash = (53 * hash) + getVectorCode().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static VectorResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VectorResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VectorResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VectorResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VectorResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static VectorResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static VectorResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VectorResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static VectorResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static VectorResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static VectorResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static VectorResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(VectorResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code service.VectorResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:service.VectorResponse)
        VectorResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return OpenCVServiceProto.internal_static_service_VectorResponse_descriptor;
      }

      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return OpenCVServiceProto.internal_static_service_VectorResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                VectorResponse.class, Builder.class);
      }

      // Construct using com.gitee.code4fun.facerecognition.common.rpc.stub.OpenCVServiceProto.VectorResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (basicResponseBuilder_ == null) {
          basicResponse_ = null;
        } else {
          basicResponse_ = null;
          basicResponseBuilder_ = null;
        }
        vectorCode_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return OpenCVServiceProto.internal_static_service_VectorResponse_descriptor;
      }

      public VectorResponse getDefaultInstanceForType() {
        return VectorResponse.getDefaultInstance();
      }

      public VectorResponse build() {
        VectorResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public VectorResponse buildPartial() {
        VectorResponse result = new VectorResponse(this);
        if (basicResponseBuilder_ == null) {
          result.basicResponse_ = basicResponse_;
        } else {
          result.basicResponse_ = basicResponseBuilder_.build();
        }
        result.vectorCode_ = vectorCode_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof VectorResponse) {
          return mergeFrom((VectorResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(VectorResponse other) {
        if (other == VectorResponse.getDefaultInstance()) return this;
        if (other.hasBasicResponse()) {
          mergeBasicResponse(other.getBasicResponse());
        }
        if (!other.getVectorCode().isEmpty()) {
          vectorCode_ = other.vectorCode_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        VectorResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (VectorResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private OpenCVBasicResponse basicResponse_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          OpenCVBasicResponse, OpenCVBasicResponse.Builder, OpenCVBasicResponseOrBuilder> basicResponseBuilder_;
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public boolean hasBasicResponse() {
        return basicResponseBuilder_ != null || basicResponse_ != null;
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public OpenCVBasicResponse getBasicResponse() {
        if (basicResponseBuilder_ == null) {
          return basicResponse_ == null ? OpenCVBasicResponse.getDefaultInstance() : basicResponse_;
        } else {
          return basicResponseBuilder_.getMessage();
        }
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public Builder setBasicResponse(OpenCVBasicResponse value) {
        if (basicResponseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basicResponse_ = value;
          onChanged();
        } else {
          basicResponseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public Builder setBasicResponse(
          OpenCVBasicResponse.Builder builderForValue) {
        if (basicResponseBuilder_ == null) {
          basicResponse_ = builderForValue.build();
          onChanged();
        } else {
          basicResponseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public Builder mergeBasicResponse(OpenCVBasicResponse value) {
        if (basicResponseBuilder_ == null) {
          if (basicResponse_ != null) {
            basicResponse_ =
              OpenCVBasicResponse.newBuilder(basicResponse_).mergeFrom(value).buildPartial();
          } else {
            basicResponse_ = value;
          }
          onChanged();
        } else {
          basicResponseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public Builder clearBasicResponse() {
        if (basicResponseBuilder_ == null) {
          basicResponse_ = null;
          onChanged();
        } else {
          basicResponse_ = null;
          basicResponseBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public OpenCVBasicResponse.Builder getBasicResponseBuilder() {
        
        onChanged();
        return getBasicResponseFieldBuilder().getBuilder();
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      public OpenCVBasicResponseOrBuilder getBasicResponseOrBuilder() {
        if (basicResponseBuilder_ != null) {
          return basicResponseBuilder_.getMessageOrBuilder();
        } else {
          return basicResponse_ == null ?
              OpenCVBasicResponse.getDefaultInstance() : basicResponse_;
        }
      }
      /**
       * <code>.service.OpenCVBasicResponse basicResponse = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          OpenCVBasicResponse, OpenCVBasicResponse.Builder, OpenCVBasicResponseOrBuilder>
          getBasicResponseFieldBuilder() {
        if (basicResponseBuilder_ == null) {
          basicResponseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              OpenCVBasicResponse, OpenCVBasicResponse.Builder, OpenCVBasicResponseOrBuilder>(
                  getBasicResponse(),
                  getParentForChildren(),
                  isClean());
          basicResponse_ = null;
        }
        return basicResponseBuilder_;
      }

      private Object vectorCode_ = "";
      /**
       * <code>string vectorCode = 2;</code>
       */
      public String getVectorCode() {
        Object ref = vectorCode_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          vectorCode_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <code>string vectorCode = 2;</code>
       */
      public com.google.protobuf.ByteString
          getVectorCodeBytes() {
        Object ref = vectorCode_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          vectorCode_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string vectorCode = 2;</code>
       */
      public Builder setVectorCode(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        vectorCode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string vectorCode = 2;</code>
       */
      public Builder clearVectorCode() {
        
        vectorCode_ = getDefaultInstance().getVectorCode();
        onChanged();
        return this;
      }
      /**
       * <code>string vectorCode = 2;</code>
       */
      public Builder setVectorCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        vectorCode_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:service.VectorResponse)
    }

    // @@protoc_insertion_point(class_scope:service.VectorResponse)
    private static final VectorResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new VectorResponse();
    }

    public static VectorResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<VectorResponse>
        PARSER = new com.google.protobuf.AbstractParser<VectorResponse>() {
      public VectorResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new VectorResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<VectorResponse> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<VectorResponse> getParserForType() {
      return PARSER;
    }

    public VectorResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_service_OpenCVBasicRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_service_OpenCVBasicRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_service_OpenCVBasicResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_service_OpenCVBasicResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_service_ImageResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_service_ImageResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_service_VectorResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_service_VectorResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024service.opencv.proto\022\007service\"\'\n\022OpenC" +
      "VBasicRequest\022\021\n\timageCode\030\001 \001(\t\"1\n\023Open" +
      "CVBasicResponse\022\014\n\004code\030\001 \001(\t\022\014\n\004desc\030\002 " +
      "\001(\t\"W\n\rImageResponse\0223\n\rbasicResponse\030\001 " +
      "\001(\0132\034.service.OpenCVBasicResponse\022\021\n\tima" +
      "geCode\030\002 \001(\t\"Y\n\016VectorResponse\0223\n\rbasicR" +
      "esponse\030\001 \001(\0132\034.service.OpenCVBasicRespo" +
      "nse\022\022\n\nvectorCode\030\002 \001(\t2\352\001\n\rOpenCVServic" +
      "e\022H\n\017getFaceTagImage\022\033.service.OpenCVBas" +
      "icRequest\032\026.service.ImageResponse\"\000\022F\n\rg" +
      "etFaceImages\022\033.service.OpenCVBasicReques" +
      "t\032\026.service.ImageResponse\"\000\022G\n\rgetFaceVe" +
      "ctor\022\033.service.OpenCVBasicRequest\032\027.serv" +
      "ice.VectorResponse\"\000BH\n2com.gitee.code4f" +
      "un.facerecognition.common.rpc.stubB\022Open" +
      "CVServiceProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_service_OpenCVBasicRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_service_OpenCVBasicRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_service_OpenCVBasicRequest_descriptor,
        new String[] { "ImageCode", });
    internal_static_service_OpenCVBasicResponse_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_service_OpenCVBasicResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_service_OpenCVBasicResponse_descriptor,
        new String[] { "Code", "Desc", });
    internal_static_service_ImageResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_service_ImageResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_service_ImageResponse_descriptor,
        new String[] { "BasicResponse", "ImageCode", });
    internal_static_service_VectorResponse_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_service_VectorResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_service_VectorResponse_descriptor,
        new String[] { "BasicResponse", "VectorCode", });
  }

  // @@protoc_insertion_point(outer_class_scope)


  public static void main(String[] args){
    System.out.println("我是");
  }

}
